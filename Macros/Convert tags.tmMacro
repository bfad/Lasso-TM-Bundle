<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>commands</key>
	<array>
		<dict>
			<key>argument</key>
			<dict>
				<key>action</key>
				<string>replaceAll</string>
				<key>findString</key>
				<string>define_tag[(:\s]*'(.*?)'\s*,?([^;)]*)[);]+</string>
				<key>ignoreCase</key>
				<true/>
				<key>regularExpression</key>
				<true/>
				<key>replaceAllScope</key>
				<string>document</string>
				<key>replaceString</key>
				<string>define $1($2) =&gt; {</string>
				<key>wrapAround</key>
				<false/>
			</dict>
			<key>command</key>
			<string>findWithOptions:</string>
		</dict>
		<dict>
			<key>argument</key>
			<dict>
				<key>action</key>
				<string>replaceAll</string>
				<key>findString</key>
				<string>/define_tag;</string>
				<key>ignoreCase</key>
				<true/>
				<key>regularExpression</key>
				<true/>
				<key>replaceAllScope</key>
				<string>document</string>
				<key>replaceString</key>
				<string>}</string>
				<key>wrapAround</key>
				<false/>
			</dict>
			<key>command</key>
			<string>findWithOptions:</string>
		</dict>
		<dict>
			<key>argument</key>
			<dict>
				<key>action</key>
				<string>replaceAll</string>
				<key>findString</key>
				<string>\s*-req.*?=\s*'(\w+)'\s*,\s*-type\s*=\s*'(.*?)'</string>
				<key>ignoreCase</key>
				<true/>
				<key>regularExpression</key>
				<true/>
				<key>replaceAllScope</key>
				<string>document</string>
				<key>replaceString</key>
				<string>$1::$2</string>
				<key>wrapAround</key>
				<false/>
			</dict>
			<key>command</key>
			<string>findWithOptions:</string>
		</dict>
		<dict>
			<key>argument</key>
			<dict>
				<key>action</key>
				<string>replaceAll</string>
				<key>findString</key>
				<string>\s*-req.*?=\s*'(\w+)'</string>
				<key>ignoreCase</key>
				<true/>
				<key>regularExpression</key>
				<true/>
				<key>replaceAllScope</key>
				<string>document</string>
				<key>replaceString</key>
				<string>$1::any</string>
				<key>wrapAround</key>
				<false/>
			</dict>
			<key>command</key>
			<string>findWithOptions:</string>
		</dict>
		<dict>
			<key>argument</key>
			<dict>
				<key>action</key>
				<string>replaceAll</string>
				<key>findString</key>
				<string>\s*-opt.*?=\s*'(\w+)'</string>
				<key>ignoreCase</key>
				<true/>
				<key>regularExpression</key>
				<true/>
				<key>replaceAllScope</key>
				<string>document</string>
				<key>replaceString</key>
				<string>$1=null</string>
				<key>wrapAround</key>
				<false/>
			</dict>
			<key>command</key>
			<string>findWithOptions:</string>
		</dict>
		<dict>
			<key>argument</key>
			<dict>
				<key>action</key>
				<string>replaceAll</string>
				<key>findString</key>
				<string>\s*-priority\s*=\s*'\w+',?</string>
				<key>ignoreCase</key>
				<true/>
				<key>regularExpression</key>
				<true/>
				<key>replaceAllScope</key>
				<string>document</string>
				<key>replaceString</key>
				<string></string>
				<key>wrapAround</key>
				<false/>
			</dict>
			<key>command</key>
			<string>findWithOptions:</string>
		</dict>
		<dict>
			<key>argument</key>
			<dict>
				<key>action</key>
				<string>replaceAll</string>
				<key>findString</key>
				<string>\s*-namespace\s*=\s*'\w+',?</string>
				<key>ignoreCase</key>
				<true/>
				<key>regularExpression</key>
				<true/>
				<key>replaceAllScope</key>
				<string>document</string>
				<key>replaceString</key>
				<string></string>
				<key>wrapAround</key>
				<false/>
			</dict>
			<key>command</key>
			<string>findWithOptions:</string>
		</dict>
		<dict>
			<key>argument</key>
			<dict>
				<key>action</key>
				<string>replaceAll</string>
				<key>findString</key>
				<string>,*\s*-copy\s*</string>
				<key>ignoreCase</key>
				<true/>
				<key>regularExpression</key>
				<true/>
				<key>replaceAllScope</key>
				<string>document</string>
				<key>replaceString</key>
				<string></string>
				<key>wrapAround</key>
				<false/>
			</dict>
			<key>command</key>
			<string>findWithOptions:</string>
		</dict>
		<dict>
			<key>argument</key>
			<dict>
				<key>action</key>
				<string>replaceAll</string>
				<key>findString</key>
				<string>return:</string>
				<key>ignoreCase</key>
				<true/>
				<key>regularExpression</key>
				<true/>
				<key>replaceAllScope</key>
				<string>document</string>
				<key>replaceString</key>
				<string>return </string>
				<key>wrapAround</key>
				<false/>
			</dict>
			<key>command</key>
			<string>findWithOptions:</string>
		</dict>
		<dict>
			<key>argument</key>
			<dict>
				<key>action</key>
				<string>replaceAll</string>
				<key>findString</key>
				<string>([^|\|][\t \|\?]*\w+):(?!:|/)([^;\|]*?)(\s*[\|;])</string>
				<key>ignoreCase</key>
				<true/>
				<key>regularExpression</key>
				<true/>
				<key>replaceAllScope</key>
				<string>document</string>
				<key>replaceString</key>
				<string>$1($2)$3</string>
				<key>wrapAround</key>
				<false/>
			</dict>
			<key>command</key>
			<string>findWithOptions:</string>
		</dict>
		<dict>
			<key>argument</key>
			<dict>
				<key>action</key>
				<string>replaceAll</string>
				<key>findString</key>
				<string>select\(</string>
				<key>ignoreCase</key>
				<true/>
				<key>regularExpression</key>
				<true/>
				<key>replaceAllScope</key>
				<string>document</string>
				<key>replaceString</key>
				<string>match(</string>
				<key>wrapAround</key>
				<false/>
			</dict>
			<key>command</key>
			<string>findWithOptions:</string>
		</dict>
		<dict>
			<key>argument</key>
			<dict>
				<key>action</key>
				<string>replaceAll</string>
				<key>findString</key>
				<string>/select;</string>
				<key>ignoreCase</key>
				<true/>
				<key>regularExpression</key>
				<true/>
				<key>replaceAllScope</key>
				<string>document</string>
				<key>replaceString</key>
				<string>/match;</string>
				<key>wrapAround</key>
				<false/>
			</dict>
			<key>command</key>
			<string>findWithOptions:</string>
		</dict>
		<dict>
			<key>argument</key>
			<dict>
				<key>action</key>
				<string>replaceAll</string>
				<key>findString</key>
				<string>\((\w+):(?!:)</string>
				<key>ignoreCase</key>
				<true/>
				<key>regularExpression</key>
				<true/>
				<key>replaceAllScope</key>
				<string>document</string>
				<key>replaceString</key>
				<string>\L$1(</string>
				<key>wrapAround</key>
				<false/>
			</dict>
			<key>command</key>
			<string>findWithOptions:</string>
		</dict>
		<dict>
			<key>argument</key>
			<dict>
				<key>action</key>
				<string>replaceAll</string>
				<key>findString</key>
				<string>variable\(</string>
				<key>ignoreCase</key>
				<true/>
				<key>regularExpression</key>
				<true/>
				<key>replaceAllScope</key>
				<string>document</string>
				<key>replaceString</key>
				<string>var(</string>
				<key>wrapAround</key>
				<false/>
			</dict>
			<key>command</key>
			<string>findWithOptions:</string>
		</dict>
		<dict>
			<key>argument</key>
			<dict>
				<key>action</key>
				<string>replaceAll</string>
				<key>findString</key>
				<string>variable_set\(</string>
				<key>ignoreCase</key>
				<true/>
				<key>regularExpression</key>
				<true/>
				<key>replaceAllScope</key>
				<string>document</string>
				<key>replaceString</key>
				<string>var(</string>
				<key>wrapAround</key>
				<false/>
			</dict>
			<key>command</key>
			<string>findWithOptions:</string>
		</dict>
		<dict>
			<key>argument</key>
			<dict>
				<key>action</key>
				<string>replaceAll</string>
				<key>findString</key>
				<string>([\s=\t]\w+\()</string>
				<key>ignoreCase</key>
				<true/>
				<key>regularExpression</key>
				<true/>
				<key>replaceAllScope</key>
				<string>document</string>
				<key>replaceString</key>
				<string>\L$1</string>
				<key>wrapAround</key>
				<false/>
			</dict>
			<key>command</key>
			<string>findWithOptions:</string>
		</dict>
		<dict>
			<key>argument</key>
			<dict>
				<key>action</key>
				<string>replaceAll</string>
				<key>findString</key>
				<string>((?:var|local)\(.*?=|\))</string>
				<key>ignoreCase</key>
				<true/>
				<key>regularExpression</key>
				<true/>
				<key>replaceAllScope</key>
				<string>document</string>
				<key>replaceString</key>
				<string>\L$1</string>
				<key>wrapAround</key>
				<false/>
			</dict>
			<key>command</key>
			<string>findWithOptions:</string>
		</dict>
		<dict>
			<key>argument</key>
			<dict>
				<key>action</key>
				<string>replaceAll</string>
				<key>findString</key>
				<string>(\$|\#\w+)</string>
				<key>ignoreCase</key>
				<true/>
				<key>regularExpression</key>
				<true/>
				<key>replaceAllScope</key>
				<string>document</string>
				<key>replaceString</key>
				<string>\L$1</string>
				<key>wrapAround</key>
				<false/>
			</dict>
			<key>command</key>
			<string>findWithOptions:</string>
		</dict>
		<dict>
			<key>argument</key>
			<dict>
				<key>action</key>
				<string>replaceAll</string>
				<key>findString</key>
				<string>(\[\w+\])</string>
				<key>ignoreCase</key>
				<true/>
				<key>regularExpression</key>
				<true/>
				<key>replaceAllScope</key>
				<string>document</string>
				<key>replaceString</key>
				<string>\L$1</string>
				<key>wrapAround</key>
				<false/>
			</dict>
			<key>command</key>
			<string>findWithOptions:</string>
		</dict>
		<dict>
			<key>argument</key>
			<dict>
				<key>action</key>
				<string>replaceAll</string>
				<key>findString</key>
				<string>(\w+\-&gt;)\((\w+)\)</string>
				<key>ignoreCase</key>
				<true/>
				<key>regularExpression</key>
				<true/>
				<key>replaceAllScope</key>
				<string>document</string>
				<key>replaceString</key>
				<string>\l$1\l$2</string>
				<key>wrapAround</key>
				<false/>
			</dict>
			<key>command</key>
			<string>findWithOptions:</string>
		</dict>
		<dict>
			<key>argument</key>
			<dict>
				<key>action</key>
				<string>replaceAll</string>
				<key>findString</key>
				<string>(\w+\-&gt;\w+)</string>
				<key>ignoreCase</key>
				<true/>
				<key>regularExpression</key>
				<true/>
				<key>replaceAllScope</key>
				<string>document</string>
				<key>replaceString</key>
				<string>\L$1</string>
				<key>wrapAround</key>
				<false/>
			</dict>
			<key>command</key>
			<string>findWithOptions:</string>
		</dict>
		<dict>
			<key>argument</key>
			<dict>
				<key>action</key>
				<string>replaceAll</string>
				<key>findString</key>
				<string>&lt;\?lassoscript</string>
				<key>ignoreCase</key>
				<true/>
				<key>regularExpression</key>
				<true/>
				<key>replaceAllScope</key>
				<string>document</string>
				<key>replaceString</key>
				<string>&lt;?lasso</string>
				<key>wrapAround</key>
				<false/>
			</dict>
			<key>command</key>
			<string>findWithOptions:</string>
		</dict>
		<dict>
			<key>argument</key>
			<dict>
				<key>action</key>
				<string>replaceAll</string>
				<key>findString</key>
				<string>(\s)(protect|records|match|iterate|inline|rows|handle|handle_error|loop\(|while\(|if\()([^;{}]*?);</string>
				<key>ignoreCase</key>
				<true/>
				<key>regularExpression</key>
				<true/>
				<key>replaceAllScope</key>
				<string>document</string>
				<key>replaceString</key>
				<string>$1$2$3 =&gt; {</string>
				<key>wrapAround</key>
				<false/>
			</dict>
			<key>command</key>
			<string>findWithOptions:</string>
		</dict>
		<dict>
			<key>argument</key>
			<dict>
				<key>action</key>
				<string>replaceAll</string>
				<key>findString</key>
				<string>/(protect|records|match|iterate|inline|rows|handle|handle_error|loop|while|if);</string>
				<key>ignoreCase</key>
				<true/>
				<key>regularExpression</key>
				<true/>
				<key>replaceAllScope</key>
				<string>document</string>
				<key>replaceString</key>
				<string>}</string>
				<key>wrapAround</key>
				<false/>
			</dict>
			<key>command</key>
			<string>findWithOptions:</string>
		</dict>
		<dict>
			<key>argument</key>
			<dict>
				<key>action</key>
				<string>replaceAll</string>
				<key>findString</key>
				<string>;$</string>
				<key>ignoreCase</key>
				<true/>
				<key>regularExpression</key>
				<true/>
				<key>replaceAllScope</key>
				<string>document</string>
				<key>replaceString</key>
				<string></string>
				<key>wrapAround</key>
				<false/>
			</dict>
			<key>command</key>
			<string>findWithOptions:</string>
		</dict>
		<dict>
			<key>argument</key>
			<dict>
				<key>action</key>
				<string>replaceAll</string>
				<key>findString</key>
				<string>([^\t\s]\w+\()</string>
				<key>ignoreCase</key>
				<true/>
				<key>regularExpression</key>
				<true/>
				<key>replaceAllScope</key>
				<string>document</string>
				<key>replaceString</key>
				<string>\l$1</string>
				<key>wrapAround</key>
				<false/>
			</dict>
			<key>command</key>
			<string>findWithOptions:</string>
		</dict>
	</array>
	<key>name</key>
	<string>Convert tags to Lasso 9</string>
	<key>uuid</key>
	<string>24BC6A9C-CFC1-42FC-A871-F30E652ED3C7</string>
</dict>
</plist>
